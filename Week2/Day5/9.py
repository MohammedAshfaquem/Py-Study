# ‚úÖ 1. WSGI ‚Äî Web Server Gateway Interface
# It is the standard interface between web servers (like Apache, Nginx with Gunicorn) and Python web apps.
# It handles synchronous requests (i.e., normal HTTP requests: GET, POST).
# Django traditionally used WSGI before Django 3.0.
# Think of WSGI as a one-lane road ‚Äî handles one request per thread.

# ‚úÖ 2. ASGI ‚Äî Asynchronous Server Gateway Interface
# It is the modern alternative to WSGI.
# Supports asynchronous programming ‚Äî handles HTTP, WebSockets, long polling etc.
# Used in Django 3.0 and above to support real-time apps (chat, notifications).
# Compatible with async def views and await.
# Think of ASGI as a multi-lane express highway ‚Äî multiple requests handled together (more efficient for real-time apps).

# üîÅ WSGI vs ASGI ‚Äî Quick Comparison
# Feature        	WSGI	                        ASGI
# Full form	        Web Server Gateway Interface	Asynchronous Server Gateway Interface
# Requests	        Synchronous only	            Both synchronous & asynchronous
# WebSockets	    ‚ùå Not supported	              ‚úÖ Supported
# Real-time apps	‚ùå No	                      ‚úÖ Yes
# Django support	Default before 3.0	           From Django 3.0+
# Example           use	Normal websites	           Chat apps, live updates